# Default values for zk-daemonset.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  dockerBase: "us-west1-docker.pkg.dev/zerok-dev/zk-client"

replicaCount: 1

#image:
#  repo: "zk-daemonset"
#  pullPolicy: Always
#  tag: "latest"

redis:
  host: redis.zk-client.svc.cluster.local
  port: 6379
  readTimeout: 20
  dbs:
    traces: 1
    otel: 3
    scenarios: 6
    imageStore: 7


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

serviceConfigs:
  logs:
    color: true
    level: DEBUG

promtail:
  zkDaemonsetImage:
    repo: "zk-daemonset"
    pullPolicy: Always
    tag: "latest"
  global:
    zkcloud:
      clusterId:
  fullnameOverride: zk-promtail
  config:
    clients:
      - url: http://zk-wsp-client.zk-client.svc.cluster.local:8987/request?X-PROXY-DESTINATION=http://loki-loki-distributed-gateway.grafana-loki.svc.cluster.local/loki/api/v1/push
    snippets:
      scrapeConfigs: |
        # See also https://github.com/grafana/loki/blob/master/production/ksonnet/promtail/scrape_config.libsonnet for reference
        - job_name: kubernetes-pods
          pipeline_stages:
            {{- toYaml .Values.config.snippets.pipelineStages | nindent 4 }}
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels:
                - __meta_kubernetes_pod_controller_name
              regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
              action: replace
              target_label: __tmp_controller_name
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_name
                - __meta_kubernetes_pod_label_app
                - __tmp_controller_name
                - __meta_kubernetes_pod_name
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: app
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_instance
                - __meta_kubernetes_pod_label_instance
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: instance
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_component
                - __meta_kubernetes_pod_label_component
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: component
            - source_labels:
                - __meta_kubernetes_namespace
                - __meta_zk_promtail_ignore
              action: drop
              regex: zk-client;"true"
            - source_labels:
                - __meta_kubernetes_namespace
                - ignore_log
              action: drop
              regex: zk-client;"true"
            - action: replace
              replacement: {{ .Values.global.zkcloud.clusterId }}
              target_label: client
            - source_labels:
                - __meta_kubernetes_namespace
              action: keep
              regex: zk-client
            {{- if .Values.config.snippets.addScrapeJobLabel }}
            - replacement: kubernetes-pods
              target_label: scrape_job
            {{- end }}
            {{- toYaml .Values.config.snippets.common | nindent 4 }}
            {{- with .Values.config.snippets.extraRelabelConfigs }}
            {{- toYaml . | nindent 4 }}
            {{- end }}